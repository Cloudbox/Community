#########################################################################
# Title:         Settings: Settings Migrator                            #
# Author(s):     desimaniac                                             #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Cloudbox Settings Migrator Block
  block:

  # Decryption Tasks
  - name: "Check '{{item}}' for encryption."
    shell: "head -1 {{item}} | grep -q \\$ANSIBLE_VAULT"
    register: encryption_check
    ignore_errors: yes
    failed_when: encryption_check.rc > 1

  - name: "Set 'file_is_encrypted' variable."
    set_fact:
      file_is_encrypted: "{{ ((encryption_check.rc == 0) | default(false,true)) }}"

  - name: "Decrypt '{{item}}' when encrypted."
    shell: "ansible-vault decrypt {{item}}"
    become: yes
    become_user: "{{cloudbox_yml.stat.pw_name}}"
    when: file_is_encrypted

  # Migration 1: Move over vault_service to restore_service
  - name: Migration 1
    block:

    - name: Install yyq
      import_role:
        name: yyq

    - name: "Set variables"
      set_fact:
        vault_service_defined: "{{ true if not(
            (vault_service is undefined)
            or
            (vault_service is none)
            or
            (vault_service | trim == '')
            or
            (vault_service.user is undefined)
            or
            (vault_service.user is none)
            or
            (vault_service.user | trim == '')
            or
            (vault_service.pass is undefined)
            or
            (vault_service.pass is none)
            or
            (vault_service.pass | trim == '')
          )
            else false }}"
        restore_service_defined: "{{ true if not(
            (restore_service is undefined)
            or
            (restore_service is none)
            or
            (restore_service | trim == '')
            or
            (restore_service.user is undefined)
            or
            (restore_service.user is none)
            or
            (restore_service.user | trim == '')
            or
            (restore_service.pass is undefined)
            or
            (restore_service.pass is none)
            or
            (restore_service.pass | trim == '')
          )
            else false }}"

    - name: Update file
      shell: |
        yyq w -i {{ playbook_dir }}/backup_config.yml restore_service.user {{ vault_service.user }}
        yyq w -i {{ playbook_dir }}/backup_config.yml restore_service.pass {{ vault_service.pass }}
      become: yes
      become_user: "{{cloudbox_yml.stat.pw_name}}"
      when: (vault_service_defined) and not (restore_service_defined)

    - name: Update file
      shell: yyq d -i {{ playbook_dir }}/backup_config.yml vault_service
      become: yes
      become_user: "{{cloudbox_yml.stat.pw_name}}"

    when: (item == "backup_config.yml")

  always:
  - name: "Re-encrypt '{{item}}' if previously encrypted."
    shell: "ansible-vault encrypt {{item}}"
    become: yes
    become_user: "{{cloudbox_yml.stat.pw_name}}"
    when: file_is_encrypted
