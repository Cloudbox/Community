#########################################################################
# Title:            Community: Funkwhale                                #
# Author(s):        RXWatcher, Superduper09                             #
# URL:              https://github.com/Cloudbox/Community               #
# Docker Image(s):  thetarkus/funkwhale                                 #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Set DNS Record on CloudFlare"
  include_role:
    name: cloudflare-dns
  vars:
    record: funkwhale
  when: cloudflare_enabled

- name: "Stop and remove funkwhale container"
  docker_container:
    name: funkwhale
    state: absent

- name: "Create funkwhale directories"
  file: "path={{ item }} state=directory mode=0775 owner={{ user.name }} group={{ user.name }}"
  with_items:
    - /opt/funkwhale
    - /opt/funkwhale/data

- name: "Check if funkwhale env file exists"
  stat:
    path: "/opt/funkwhale/env"
  register: funkwhale_env

- name: "Import env file if it doesnt exist"
  template:
    src: funkwhale_env.j2
    dest: /opt/funkwhale/env
    force: yes
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0775
  when: not funkwhale_env.stat.exists

- name: "Create and start funkwhale container"
  docker_container:
    name: funkwhale
    image: thetarkus/funkwhale:latest
    pull: yes
    published_ports:
      - "127.0.0.1:6969:80"
    env:
      FUNKWHALE_URL: "funkwhale.{{ user.domain }}"
      VIRTUAL_HOST: "funkwhale.{{ user.domain }}"
      LETSENCRYPT_HOST: "funkwhale.{{ user.domain }}"
      LETSENCRYPT_EMAIL: "{{ user.email }}"
      VIRTUAL_PORT: 80
      PUID: "{{ uid }}"
      PGID: "{{ gid }}"
    env_file: /opt/funkwhale/env
    volumes:
      - "/opt/funkwhale/data:/data"
      - "/mnt/unionfs/:/music:ro"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
    networks:
      - name: cloudbox
        aliases:
          - funkwhale
    purge_networks: yes
    restart_policy: unless-stopped
    state: started

- name: "sleep for 10 seconds and continue"
  wait_for: timeout=10

- name: "Create Admin User"
  command: docker exec -i funkwhale /usr/bin/python3 /app/api/manage.py shell -c "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('{{ user.name }}', '{{ user.email }}', '{{ user.pass }}')"
  ignore_errors: yes
  no_log: True
