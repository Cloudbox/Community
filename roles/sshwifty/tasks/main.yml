#########################################################################
# Title:            Community: Sshwifty                                 #
# Author(s):        astromd                                             #
# URL:              https://github.com/Cloudbox/Community               #
# Docker Image(s):  niruix/sshwifty                                     #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Set DNS Record on CloudFlare"
  include_role:
    name: cloudflare-dns
  vars:
    record: sshwifty
  when: cloudflare_enabled

- name: Create required directories
  file: "path={{ item }} state=directory mode=0775 owner={{ user.name }} group={{ user.name }}"
  with_items:
    - /opt/sshwifty
    - /opt/sshwifty/config

- name: Import config file
  template:
    src: "sshwifty.conf.json.j2"
    dest: "/opt/sshwifty/config/sshwifty.conf.json"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0775
    force: no

- name: Stop and remove any existing containers
  docker_container:
    name: sshwifty
    state: absent

- name: Create and start sshwifty container
  docker_container:
    name: sshwifty
    image: "niruix/sshwifty:latest"
    pull: yes
    env:
      PUID: "{{ uid }}"
      PGID: "{{ gid }}"
      SSHWIFTY_CONFIG: "/config/sshwifty.conf.json"
      VIRTUAL_HOST: "sshwifty.{{ user.domain }}"
      VIRTUAL_PORT: 8182
      LETSENCRYPT_HOST: "sshwifty.{{ user.domain }}"
      LETSENCRYPT_EMAIL: "{{ user.email }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/sshwifty/config:/config"
      - "/mnt:/mnt"
    ports:
      - 127.0.0.1:8182:8182
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
    networks:
      - name: cloudbox
        aliases:
          - sshwifty
    purge_networks: yes
    restart_policy: unless-stopped
    state: started
