#########################################################################
# Title:            Community: SonarrX | Template                       #
# Author(s):        Kalroth, Migz93                                     #
# URL:              https://github.com/Cloudbox/Community               #
# Docker Image(s):  hotio/sonarr, hotio/sonarr3                         #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Install named sonarr role"
  debug:
    msg: "Installing {{ rolename }} using port {{ roleport }}"

- name: "Set DNS Record on CloudFlare"
  include_role:
    name: cloudflare-dns
  vars:
    record: "sonarr{{ rolename }}"
  when: cloudflare_enabled

- name: Suitarr Migration Tasks
  import_tasks: "subtasks/suitarr_migration.yml"

- name: Create sonarrx directories
  file: "path={{ item }} state=directory mode=0775 owner={{ user.name }} group={{ user.name }}"
  with_items:
    - "/opt/sonarr{{ rolename }}"

- name: Darkerr Tasks
  import_tasks: "subtasks/darkerr.yml"

- name: Set 'suitarr_version' variable for v2
  set_fact:
    suitarr_image: "hotio/sonarr"
    suitarr_version: "{{ sonarr.version | lower }}"
  when: ("v3" not in sonarr.version | lower)

- name: Set 'suitarr_version' variable for v3
  set_fact:
    suitarr_image: "hotio/sonarr3"
    suitarr_version: "{{ ('tar.gz' in sonarr.version | lower) | ternary(sonarr.version,'unstable') }}"
  when: ("v3" in sonarr.version | lower)

- name: "Check if '/dev/dri' exists"
  stat:
    path: "/dev/dri"
  register: dev_dri

- name: Set default_volumes variable
  set_fact:
    default_volumes:
      - "/opt/sonarr{{ rolename }}:/config"
      - "/opt/scripts:/scripts"
      - "/mnt:/mnt"
      - "/mnt/unionfs/Media/TV:/tv"

- name: Create and start container
  docker_container:
    name: "sonarr{{ rolename }}"
    image: "{{ suitarr_image }}"
    pull: yes
    published_ports:
      - "127.0.0.1:{{ roleport }}:8989"
    env:
      VERSION: "{{ suitarr_version }}"
      BACKUP: "no"
      PUID: "{{ uid }}"
      PGID: "{{ gid }}"
      VIRTUAL_HOST: "sonarr{{ rolename }}.{{ user.domain }}"
      VIRTUAL_PORT: 8989
      LETSENCRYPT_HOST: "sonarr{{ rolename }}.{{ user.domain }}"
      LETSENCRYPT_EMAIL: "{{ user.email }}"
      TZ: "{{ tz }}"
    volumes: "{{ default_volumes + nzbs_downloads_path|default([]) + torrents_downloads_path|default([]) }}"
    devices: "{{ '/dev/dri:/dev/dri' if (gpu.intel and dev_dri.stat.exists) | default(false) else omit }}"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
      "com.github.cloudbox.community": "sonarrx"
    networks:
      - name: cloudbox
        aliases:
          - "sonarr{{ rolename }}"
    purge_networks: yes
    restart_policy: unless-stopped
    state: started
