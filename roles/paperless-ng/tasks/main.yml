#########################################################################
# Title:            Community: Paperless-ng                             #
# Author(s):        Jolbol1                                             #
# URL:              https://github.com/Cloudbox/Community               #
# Docker Image(s):  jonaswinkler/paperless-ng:latest                    #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Postgres Role
  include_role:
    name: postgres

- name: Redis
  include_role:
    name: redis
    
- name: "Setting CloudFlare DNS Record"
  include_role:
    name: cloudflare-dns
  vars:
    record: paperless
  when: cloudflare_enabled

- name: Stop and remove any existing containers
  docker_container: "name={{ item }} state=absent"
  with_items:
    - paperless-ng
    
- name: Create required directories
  file: "path={{ item }} state=directory mode=0775 owner={{ user.name }} group={{ user.name }}"
  with_items:
    - /opt/paperless-ng
    - /mnt/unionfs/Media/Documents/paperless/media
    - /mnt/unionfs/Media/Documents/paperless/consume
    - /mnt/unionfs/Media/Documents/paperless/export
    
- name: Create blank file - Stops Cloudplow deleting empty dir
  file: "path={{ item }} state=touch mode=0775 owner={{ user.name }} group={{ user.name }}"
  with_items:
    - /mnt/unionfs/Media/Documents/paperless/media/cloudplow.dont.delete_HIDDEN
    - /mnt/unionfs/Media/Documents/paperless/consume/cloudplow.dont.delete_HIDDEN
    - /mnt/unionfs/Media/Documents/paperless/export/cloudplow.dont.delete_HIDDEN

- name: Create and start Paperless container
  docker_container:
    name: paperless-ng
    image: "jonaswinkler/paperless-ng:latest"
    pull: yes
    env:
      TZ: "{{ tz }}"
      PUID: "{{ uid }}"
      USERMAP_UID: "{{ uid }}"
      USERMAP_GID: "{{ gid }}"
      PGID: "{{ gid }}"
      VIRTUAL_HOST: "paperless.{{ user.domain }}"
      VIRTUAL_PORT: "8000"
      LETSENCRYPT_HOST: "paperless.{{ user.domain }}"
      LETSENCRYPT_EMAIL: "{{ user.email }}"
      LOG_LEVEL: DEBUG
      PAPERLESS_REDIS: redis://redis:6379
      PAPERLESS_DBHOST: postgres
      PAPERLESS_SECRET_KEY: "{{ 999999999999999999995 | random | to_uuid }}"
      PAPERLESS_TIME_ZONE: "{{ tz }}"
      PAPERLESS_DBUSER: postgres
      PAPERLESS_DBPASS: mysecretpassword
      PAPERLESS_DBNAME: postgres
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
    volumes:
      - /opt/paperless-ng:/usr/src/paperless/data
      - /mnt/unionfs/Media/Documents/paperless/media:/usr/src/paperless/media
      - /mnt/unionfs/Media/Documents/paperless/consume:/usr/src/paperless/consume
      - /mnt/unionfs/Media/Documents/paperless/export:/usr/src/paperless/export
    exposed_ports:
     - 8000
    networks:
      - name: cloudbox
        aliases:
          - paperless
    purge_networks: yes
    restart_policy: unless-stopped
    state: started
    
- name: "sleep for 60 seconds and continue"
  wait_for: timeout=60
  
- name: install pexpect
  pip:
    name: pexpect
  become: yes
  
- name: User Creation
  expect:
    command: docker exec -it paperless-ng python manage.py createsuperuser --username "{{ user.name }}"
    responses:
      (?i)Email address: "{{ user.email }}"
      (?i)Password: "{{ user.pass }}"
      (?i)Password (again): "{{ user.pass }}"
